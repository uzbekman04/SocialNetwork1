openapi: 3.0.3
info:
  title: Social Network
  version: 1.0.0
  description: Social Network
paths:
  /api:
    get:
      operationId: api_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
          description: ''
    post:
      operationId: api_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
  /api{id}/:
    get:
      operationId: api_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    put:
      operationId: api_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    patch:
      operationId: api_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPost'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    delete:
      operationId: api_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /apicreate/:
    post:
      operationId: apicreate_create
      tags:
      - apicreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostCreate'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCreate'
          description: ''
  /apiusers/:
    get:
      operationId: apiusers_list
      tags:
      - apiusers
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Users'
          description: ''
  /apiusers/{id}/:
    get:
      operationId: apiusers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - apiusers
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
          description: ''
    put:
      operationId: apiusers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - apiusers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Users'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Users'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
          description: ''
    patch:
      operationId: apiusers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - apiusers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUsers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUsers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUsers'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
          description: ''
    delete:
      operationId: apiusers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - apiusers
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /apiusers/create/:
    post:
      operationId: apiusers_create_create
      tags:
      - apiusers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
components:
  schemas:
    PatchedPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
        description:
          type: string
          nullable: true
          maxLength: 300
        created_data:
          type: string
          format: date
          readOnly: true
        comment:
          type: integer
          nullable: true
        like:
          type: integer
          nullable: true
        user:
          type: integer
    PatchedUsers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        firstname:
          type: string
          nullable: true
          maxLength: 20
        lastname:
          type: string
          nullable: true
          maxLength: 20
        dob:
          type: string
          format: date
          nullable: true
        user:
          type: integer
        follows:
          type: array
          items:
            type: integer
    Post:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
        description:
          type: string
          nullable: true
          maxLength: 300
        created_data:
          type: string
          format: date
          readOnly: true
        comment:
          type: integer
          nullable: true
        like:
          type: integer
          nullable: true
        user:
          type: integer
      required:
      - created_data
      - id
      - image
      - user
    PostCreate:
      type: object
      properties:
        image:
          type: string
          format: uri
        description:
          type: string
          nullable: true
          maxLength: 300
      required:
      - image
    UserCreate:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          maxLength: 128
      required:
      - password
      - username
    Users:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        firstname:
          type: string
          nullable: true
          maxLength: 20
        lastname:
          type: string
          nullable: true
          maxLength: 20
        dob:
          type: string
          format: date
          nullable: true
        user:
          type: integer
        follows:
          type: array
          items:
            type: integer
      required:
      - id
      - user
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
